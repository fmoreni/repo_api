name: Label Check

on:
  pull_request:
    types: [opened, edited, labeled, unlabeled]

jobs:
  check_label:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Faz o clone completo do repositório

      - name: Autenticar com o GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Verificar se há uma label obrigatória e correspondente ao diretório modificado
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          # Obtém as labels do PR
          LABELS=$(gh pr view $PR_NUMBER --json labels --jq '.labels[].name')

          # Obtém os arquivos modificados no PR
          CHANGED_FILES=$(gh pr view $PR_NUMBER --json files --jq '.files[].path')

          # Define a relação entre labels e paths
          declare -A LABEL_PATHS
          LABEL_PATHS[deploy-gw-interno]="configs/gw-interno/"
          LABEL_PATHS[deploy-gw-externo]="configs/gw-externo/"
          LABEL_PATHS[deploy-domain]="configs/gw-domain/"
          LABEL_PATHS[deploy-sandbox]="configs/gw-sandbox/"

          # Verifica a coerência entre o label e o path modificado
          LABEL_PRESENT=false
          for LABEL in "${!LABEL_PATHS[@]}"; do
            if echo "$LABELS" | grep -q "$LABEL" && echo "$CHANGED_FILES" | grep -q "${LABEL_PATHS[$LABEL]}"; then
              LABEL_PRESENT=true
              echo "Label '$LABEL' corresponde ao diretório modificado '${LABEL_PATHS[$LABEL]}'"
              break
            fi
          done

          # Falha se nenhuma label obrigatória e correspondente estiver presente
          if [ "$LABEL_PRESENT" = false ]; then
            echo "Erro: Este PR requer um label específico que corresponda ao diretório modificado. Verifique as labels e os arquivos modificados."
            exit 1
          else
            echo "Label e diretório correspondentes encontrados. PR pronto para revisão."
          fi
